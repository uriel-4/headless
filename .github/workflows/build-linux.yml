name: Build headless

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build:
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Download submodules
      run: |
        git submodule update --init --recursive

    - name: Install LLVM 16 from official APT repo
      run: |
        sudo apt-get update
        sudo apt-get install -y wget gnupg lsb-release
        wget https://apt.llvm.org/llvm.sh
        chmod +x llvm.sh
        sudo ./llvm.sh 16 all
        sudo apt-get install -y libclang-16-dev llvm-16-dev clang-tools-16

    - name: Configure CMake
      run: |
        cmake -B build \
          -DCMAKE_BUILD_TYPE=Release \
          -DLLVM_DIR=/usr/lib/llvm-16/lib/cmake/llvm \
          -DClang_DIR=/usr/lib/llvm-16/lib/cmake/clang

    - name: Build
      run: cmake --build build --config Release
    # - name: Configure CMake
    #   # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
    #   # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
    #   run: >
    #     cmake -B ${{ steps.strings.outputs.build-output-dir }}
    #     -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
    #     -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
    #     -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
    #     -S ${{ github.workspace }}

    # - name: Build
    #   # Build your program with the given configuration. Note that --config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
    #   run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    # - name: Test
    #   working-directory: ${{ steps.strings.outputs.build-output-dir }}
    #   # Execute tests defined by the CMake configuration. Note that --build-config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
    #   # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
    #   run: ctest --build-config ${{ matrix.build_type }}
