name: Build headless

on:
  push:
    branches: [ "dev", "release" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build-linux:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4

    - name: Download submodules
      run: |
        git submodule update --init --recursive

    - name: Install LLVM 16 from official APT repo
      run: |
        sudo apt-get update
        sudo apt-get install -y wget gnupg lsb-release
        wget https://apt.llvm.org/llvm.sh
        chmod +x llvm.sh
        sudo ./llvm.sh 17 all
        sudo apt-get install -y libclang-17-dev llvm-17-dev clang-tools-17

    - name: Configure CMake
      run: |
        cmake -B build \
          -DCMAKE_BUILD_TYPE=Release \
          -DLLVM_DIR=/usr/lib/llvm-17/lib/cmake/llvm \
          -DClang_DIR=/usr/lib/llvm-17/lib/cmake/clang \
          -DCMAKE_CXX_FLAGS=-lstdc++fs \
          -DCMAKE_C_COMPILER=clang-17 \
          -DCMAKE_CXX_COMPILER=clang++-17

    - name: Build
      run: cmake --build build --config Release

    - name: Upload built binary
      uses: actions/upload-artifact@v4
      with:
        name: headless-${{ runner.os }}
        path: build/headless
  
  build-macos:
    runs-on: macos-14

    steps:
    - uses: actions/checkout@v4

    - name: Download submodules
      run: |
        git submodule update --init --recursive

    - name: Install LLVM via Homebrew
      run: |
        brew install llvm
        echo "LLVM installed at:"
        brew --prefix llvm

    - name: Configure CMake
      run: |
        cmake -B build \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_C_COMPILER=clang \
          -DCMAKE_CXX_COMPILER=clang++ \
          -DCMAKE_PREFIX_PATH="$(brew --prefix llvm)"

    - name: Build
      run: cmake --build build --config Release

    - name: Upload macOS binary (Universal)
      uses: actions/upload-artifact@v4
      with:
        name: headless-macos-universal
        path: build/headless

  build-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Download submodules
      run: git submodule update --init --recursive

    - name: Download and extract prebuilt LLVM 19
      run: |
        curl -L -o llvm.7z https://github.com/c3lang/win-llvm/releases/download/llvm_19_1_5/llvm-19.1.5-windows-amd64-msvc17-msvcrt.7z
        7z x llvm.7z -oC:\LLVM
        Copy-Item "C:/LLVM/lib/cmake/llvm/LLVM-Config.cmake" -Destination "C:/LLVM/lib/cmake/llvm/LLVMConfig.cmake"
      shell: pwsh
        
    - name: Configure CMake
      run: >
        cmake -B build -S . 
        -DCMAKE_BUILD_TYPE=Release
        -G "Visual Studio 17 2022"
        -A x64
        -DLLVM_DIR="C:/LLVM/lib/cmake/llvm"
        -DClang_DIR="C:/LLVM/lib/cmake/clang"
      # -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}\vcpkg\scripts\buildsystems\vcpkg.cmake
      shell: cmd

    - name: Build
      run: cmake --build build --config Release

    - name: Upload Windows binary
      uses: actions/upload-artifact@v4
      with:
        name: headless-windows
        path: build/Release/headless.exe

